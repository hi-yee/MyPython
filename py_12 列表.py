"""
有时候需要把一堆的东西暂时存储起来，因为他们有某种直接或者间接的联系，需要把他们放在某种
'组'或者'集合'中，因为将来可能用的上，很多接触过编程的人都知道或者听说过数组，

数组：就是把一大堆同种类型的数据挨个摆在一起，然后通过数据下标进行索引。但是数据有一个基本的要求，就是你放在一个的数据
类型必须要一直。

Python的 变量 是没有数据类型的，也就说Python是没有数组的，
"""

 # 一、创建列表

# 创建列表和创建普通的变量一样，用中括号括起一堆数据就可以了，数据之间用（英文）逗号隔开
# 列表中可以包含：整数，字符串，浮点类型数据，甚至还可以包含一个列表
manlist = ['hi-man',1314.520,'小明','abcd','littelist',[1,2,5,8,0]]

# 如果想不到往列表中添加什么数据的时候，可以先创建一个空列表
empty =[]
print(manlist,empty)


# 二、向列表中添加元素,使用append（）方法
# append（）方法只能添加一个数，不能添加多个----自动添加到末尾

number = [1,2,5,8,0,]
number.append(6)

# extend（）方法，事实上使用一个列表来扩展另一个列表，所以它的参数应该的一个列表----自动添加到末尾
number.extend(['小小瞒','小鱼儿'])

# insert（）方法，有两个参数，第一个参数代表在列表中的位置，第二个代表是在这个位置处插入一个元素。
number.insert(0,'我是第一名')


print(number)
# 三 、从列表中获取元素
print(number[0],number[5])

# 四 、将两个元素的位置调换，例如将第一位和第二位互换
der = number[0]
number[0] = number[1]
number[1] = der

# 五 、从列表中删除元素,  的三个方式
# remove()方法  del()方法   pop()方法
# remove()方法，你并不需要知道这个元素在列表中的具体位置，只需要知道该元素存在列表中就可以了，
# 如果删除的元素不在列表中，程序就会报错
# remove()方法不能删除某个位置的元素，这时候就需要del来实现了
number.remove(1)
# del 是一个语句，不是列表的方法，所以你不必在它后面加上小括号()
# 如果想删除整个列表，还可以直接用得了加列表名删除
print(number)
del number[3]
# pop() 方法默认弹出列表中的最后一个元荤素。但是这个pop()方法其实还可以灵活运用，
# 当你为它加上一个索引值作为参数的时候，它会弹出这个索引值所对应的元素
# 也可以将这个pop()方法弹出的值赋值给一个变量
print(number.pop(0))
print(number)
# 六 、列表分片
# 利用索引，每次可以从列表中获取一个元素，如果需要一次性获取多个元素，就可以利用分片（slice），实现这个需求
# 用两个冒号，分割两个索引值，左边是开始的位置，右边是结束的卫视，
# 注意的就是， 结束位置上的元素是不包含的，
# 如果没有开始位置，Python会默认开始位置是0.,
# 如果需要得到从指定位置索引值到列表末尾的所有元素，把结束位置去掉即可。
# 如果没有放入任何索引值，而只有一个冒号， 则将得到整个列表的拷贝

print(number[0:2])
print(number[:2])
print(number[2:])
print(number[:])

# 分片的进阶玩法
# 其实分片操作还能接收，第三个参数，其代表的步长，在默认情况下（不指定它的时候）
# 该值为1

list = [1,12,13,14,15,16,17,18,19,10]
print(list[0:8])
print(list[0:8:2])


# 七 、列表的常用操作符
# 比较操作符
list1 = [123]
list2 = [124]

print(list1>list2)


list1 = [123,456]
list2 = [124,567]
print(list1>list2)
# 赋值
list1 = [123,456]
list3 = [123,456]
list2 = [124,567]
list4 = list1 + list2
print(list1>list2 and list1==list3)
print(list4)

print(list1 * 3)
list1 *= 3
print(list1)

# 成员关系操作符
list5 = ['语文','数学','高数','政治','历史','地理']
print('音乐' in list5)
print('音乐' not in list5)

# 查看列表的所有方法
print(dir(list))

#  列表的其他常用方法演示
mini = ['逗号','句号','感叹号','问号']
mini.pop()
mini.append('冒号')
mini.extend(['mini',25])
mini.remove(25)
mini.insert(0,'标点符号')
mini.insert(4,'句号')
print(mini)
# 访问列表的值，可以通过二维数组的方式进行访问，[]第一个中括号表示，值得索引位置，[]第二个中括号表示，显示值得位置
print(mini[0])

# 1 、count（） 方法，作用是来计算它的参数在列表中出现的次数
print(mini.count('句号'))

# 2 、 index（）方法，的作用是返回它的参数的列表中的位置
# 如果列表中有多个相的参数，index（）方法默认是返回第一个参数的位置
print(mini.index('句号'))
# index() 方法有三个参数，第一个表示需要统计的数值，第二个代表索引开始的位置， 第三个表示索引结束的位置

print(mini.index('句号',1, 6))

# 3 、reverse（） 方法， 的作用是将整个列表原地翻转，就是排在最后的放在最前边，排在最前边的放在最后，
fanzhuan = [1,25,5,6,56,556,55,565,888,888,8]
print(fanzhuan)
fanzhuan.reverse()
print(fanzhuan)

# 4 、sort() 方法， 的作用是用指定的方式对列表的成员进行排序，默认不需要参数，从小到大排序
fanzhuan.sort()
print(fanzhuan)
# sort（） 方法，默认是从小到大排序，从大到小排序需要传固定的参数，sort(reverse=True)
fanzhuan.sort(reverse=True)
print(fanzhuan)